@model IEnumerable<Quiz.Services.Data.Models.StatsUserTestViewModel>

@{ this.ViewData["Title"] = "My Statistics"; }

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-area="" asp-controller="Home" asp-action="Index">Home</a></li>
        <li class="breadcrumb-item active" aria-current="page">Statistics</li>
    </ol>
</nav>

<div class="jumbotron">
    <h1 class="display-4">Hello, @this.User.Identity.Name</h1>
    <p class="lead">This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.</p>
    <hr class="my-4">
    <p>What are you waiting for? To get more scores go and solve more tests now.</p>
    <p class="lead">
        <a class="btn btn-primary btn-lg" asp-area="" asp-controller="Home" asp-action="Index" role="button">Solve More Tests</a>
    </p>
    <h1 class="text-center">Your Score is: @Model.Sum(x => x.Result)</h1>
</div>

<table id="myTable" class="table table-sm table-striped table-hover table-bordered">
    <thead>
        <tr>
            <th>Date On</th>
            <th>Quiz Name</th>
            <th>Answers/Questions</th>
            <th>Score</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var test in this.Model)
        {
            <tr>
                <td>@test.CreatedOn</td>
                <td>@test.Title</td>
                <td>@test.Result / @test.Questions</td>
                <td>@test.Result points</td>
            </tr>
        }
    </tbody>
</table>

@section Scripts
{
    <script>
        $(document).ready(function () {
            $('#myTable').DataTable();
        });
    </script>
}